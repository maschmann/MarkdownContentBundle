parameters:

services:
    # content loaders
    asm_markdown_content.content_provider:
        class: 'Asm\MarkdownContentBundle\Content\ContentProvider'
        calls:
            - [ setLoader, ['%asm_markdown_content.content_loader%'] ]
            - [ setParser, ['%asm_markdown_content.markdown_provider%'] ]
        arguments:
            - '@asm_markdown_content.content_manager'
            - '@asm_markdown_content.parser_manager'
            - '@event_dispatcher'

    asm_markdown_content.content_file_loader:
        class: 'Asm\MarkdownContentBundle\Content\ContentFileLoader'
        arguments:
            - '%kernel.root_dir%'
            - '%asm_markdown_content.content_directory%'
            - '%asm_markdown_content.content_path_depth%'
        tags:
            - { name: asm_markdown_content.content_loader, alias: file-loader }

    # hooks
    asm_markdown_content.listener.hook:
        class: Asm\MarkdownContentBundle\EventListener\HookListener
        arguments: [ '@asm_markdown_content.hook_manager' ]
        tags:
            - { name: kernel.event_listener, event: asm_markdown_content.hook.pre_parse, method: onPreParseHook }
            - { name: kernel.event_listener, event: asm_markdown_content.hook.post_parse, method: onPostParseHook }

    # managers
    asm_markdown_content.parser_manager:
        class: 'Asm\MarkdownContentBundle\Parser\ParserManager'

    asm_markdown_content.hook_manager:
        class: 'Asm\MarkdownContentBundle\Hook\HookManager'

    asm_markdown_content.content_manager:
        class: 'Asm\MarkdownContentBundle\Content\ContentManager'

    # dynamic router
    asm_markdown_content.routes.loader:
        class: 'Asm\MarkdownContentBundle\Router\MarkdownRoutesLoader'
        arguments: [ '%asm_markdown_content.route_prefix%' ]
        tags:
            - { name: routing.loader }

    # predefined parser services
    asm_markdown_content.parsedown_parser:
        class: 'Asm\MarkdownContentBundle\Parser\ParsedownParser'
        tags:
            - { name: asm_markdown_content.parser, alias: parsedown }

    asm_markdown_content.php_markdown_parser:
        class: 'Asm\MarkdownContentBundle\Parser\PhpMarkdownParser'
        tags:
            - { name: asm_markdown_content.parser, alias: php-markdown }

    # predefined hooks
    asm_markdown_content.front_matter_content_hook:
        class: 'Asm\MarkdownContentBundle\Hook\FrontMatterContentHook'
        tags:
            - { name: asm_markdown_content.hook, alias: front_matter }
